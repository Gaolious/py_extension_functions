# Generated by Django 3.2 on 2023-03-19 05:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import gpp.django.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AllFieldModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('booleanfield', models.BooleanField(verbose_name='BooleanField')),
                ('charfield', models.CharField(max_length=100, verbose_name='CharField')),
                ('datefield', models.DateField(verbose_name='DateField')),
                ('datetimefield', models.DateTimeField(verbose_name='DateTimeField')),
                ('decimalfield', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='DecimalField')),
                ('durationfield', models.DurationField(verbose_name='DurationField')),
                ('emailfield', models.EmailField(max_length=254, verbose_name='EmailField')),
                ('filepathfield', models.FilePathField(verbose_name='FilePathField')),
                ('floatfield', models.FloatField(verbose_name='FloatField')),
                ('integerfield', models.IntegerField(verbose_name='IntegerField')),
                ('bigintegerfield', models.BigIntegerField(verbose_name='BigIntegerField')),
                ('smallintegerfield', models.SmallIntegerField(verbose_name='SmallIntegerField')),
                ('genericipaddressfield', models.GenericIPAddressField(verbose_name='GenericIPAddressField')),
                ('positivebigintegerfield', models.PositiveBigIntegerField(verbose_name='PositiveBigIntegerField')),
                ('positiveintegerfield', models.PositiveIntegerField(verbose_name='PositiveIntegerField')),
                ('positivesmallintegerfield', models.PositiveSmallIntegerField(verbose_name='PositiveSmallIntegerField')),
                ('slugfield', models.SlugField(verbose_name='SlugField')),
                ('textfield', models.TextField(verbose_name='TextField')),
                ('timefield', models.TimeField(verbose_name='TimeField')),
                ('urlfield', models.URLField(verbose_name='URLField')),
                ('binaryfield', models.BinaryField(verbose_name='BinaryField')),
                ('uuidfield', models.UUIDField(verbose_name='UUIDField')),
                ('compressefield', gpp.django.fields.CompressedTextField(max_length=10240, verbose_name='CompressedTextField')),
            ],
            options={
                'verbose_name': 'Test Model',
                'verbose_name_plural': 'Test Models',
            },
        ),
        migrations.CreateModel(
            name='TaskModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('task_status', models.PositiveSmallIntegerField(choices=[(10, 'in queued'), (20, 'in processing'), (30, 'error'), (40, 'completed')], default=10, verbose_name='status of crawling task')),
                ('queued_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='queued datetime')),
                ('processing_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='processing datetime')),
                ('error_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='error datetime')),
                ('completed_datetime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='completed datetime')),
            ],
            options={
                'verbose_name': 'Test Test Model',
                'verbose_name_plural': 'Test Test Models',
            },
        ),
        migrations.CreateModel(
            name='ArchivedAllFieldModel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('modified', models.DateTimeField(blank=True, editable=False, verbose_name='modified date')),
                ('archive_date', models.DateTimeField(blank=True, editable=False, verbose_name='created date')),
                ('old_pk', models.BigIntegerField(db_index=True, editable=False, verbose_name='old pk')),
                ('booleanfield', models.BooleanField(verbose_name='BooleanField')),
                ('charfield', models.CharField(max_length=100, verbose_name='CharField')),
                ('datefield', models.DateField(verbose_name='DateField')),
                ('datetimefield', models.DateTimeField(verbose_name='DateTimeField')),
                ('decimalfield', models.DecimalField(decimal_places=10, max_digits=30, verbose_name='DecimalField')),
                ('durationfield', models.DurationField(verbose_name='DurationField')),
                ('emailfield', models.EmailField(max_length=254, verbose_name='EmailField')),
                ('filepathfield', models.FilePathField(verbose_name='FilePathField')),
                ('floatfield', models.FloatField(verbose_name='FloatField')),
                ('integerfield', models.IntegerField(verbose_name='IntegerField')),
                ('bigintegerfield', models.BigIntegerField(verbose_name='BigIntegerField')),
                ('smallintegerfield', models.SmallIntegerField(verbose_name='SmallIntegerField')),
                ('genericipaddressfield', models.GenericIPAddressField(verbose_name='GenericIPAddressField')),
                ('positivebigintegerfield', models.PositiveBigIntegerField(verbose_name='PositiveBigIntegerField')),
                ('positiveintegerfield', models.PositiveIntegerField(verbose_name='PositiveIntegerField')),
                ('positivesmallintegerfield', models.PositiveSmallIntegerField(verbose_name='PositiveSmallIntegerField')),
                ('slugfield', models.SlugField(verbose_name='SlugField')),
                ('textfield', models.TextField(verbose_name='TextField')),
                ('timefield', models.TimeField(verbose_name='TimeField')),
                ('urlfield', models.URLField(verbose_name='URLField')),
                ('binaryfield', models.BinaryField(verbose_name='BinaryField')),
                ('uuidfield', models.UUIDField(verbose_name='UUIDField')),
                ('compressefield', gpp.django.fields.CompressedTextField(max_length=10240, verbose_name='CompressedTextField')),
                ('archive_user', models.ForeignKey(db_constraint=False, db_index=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Test Model',
                'verbose_name_plural': 'Test Models',
            },
        ),
    ]
